package com.eveningoutpost.dexdrip.watch.thinjam.utils;

import com.eveningoutpost.dexdrip.HexTestTools;

import org.junit.Test;

import static com.google.common.truth.Truth.assertWithMessage;

// jamorham

public class BitmapToolsTest extends HexTestTools {

    private byte[] get565stream(int length, int step) {
        byte[] result = new byte[length * 2];
        for (int i = 0; i < result.length; i = i + (2 * step)) {
            result[i] = 1;
            result[i + 1] = 1;
        }
        return result;
    }

    @Test
    public void packRGB565bytesToMonoTest() {

        assertWithMessage("size: 0 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 1)))).isEqualTo("");
        assertWithMessage("size: 1 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 1)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 1)))).isEqualTo("03");
        assertWithMessage("size: 3 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 1)))).isEqualTo("07");
        assertWithMessage("size: 4 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 1)))).isEqualTo("0F");
        assertWithMessage("size: 5 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 1)))).isEqualTo("1F");
        assertWithMessage("size: 6 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 1)))).isEqualTo("3F");
        assertWithMessage("size: 7 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 1)))).isEqualTo("7F");
        assertWithMessage("size: 8 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 1)))).isEqualTo("FF");
        assertWithMessage("size: 9 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 1)))).isEqualTo("FF01");
        assertWithMessage("size: 10 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 1)))).isEqualTo("FF03");
        assertWithMessage("size: 11 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 1)))).isEqualTo("FF07");
        assertWithMessage("size: 12 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 1)))).isEqualTo("FF0F");
        assertWithMessage("size: 13 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 1)))).isEqualTo("FF1F");
        assertWithMessage("size: 14 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 1)))).isEqualTo("FF3F");
        assertWithMessage("size: 15 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 1)))).isEqualTo("FF7F");
        assertWithMessage("size: 16 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 1)))).isEqualTo("FFFF");
        assertWithMessage("size: 17 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 1)))).isEqualTo("FFFF01");
        assertWithMessage("size: 18 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 1)))).isEqualTo("FFFF03");
        assertWithMessage("size: 19 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 1)))).isEqualTo("FFFF07");
        assertWithMessage("size: 20 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 1)))).isEqualTo("FFFF0F");
        assertWithMessage("size: 21 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 1)))).isEqualTo("FFFF1F");
        assertWithMessage("size: 22 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 1)))).isEqualTo("FFFF3F");
        assertWithMessage("size: 23 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 1)))).isEqualTo("FFFF7F");
        assertWithMessage("size: 24 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 1)))).isEqualTo("FFFFFF");
        assertWithMessage("size: 25 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 1)))).isEqualTo("FFFFFF01");
        assertWithMessage("size: 26 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 1)))).isEqualTo("FFFFFF03");
        assertWithMessage("size: 27 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 1)))).isEqualTo("FFFFFF07");
        assertWithMessage("size: 28 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 1)))).isEqualTo("FFFFFF0F");
        assertWithMessage("size: 29 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 1)))).isEqualTo("FFFFFF1F");
        assertWithMessage("size: 30 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 1)))).isEqualTo("FFFFFF3F");
        assertWithMessage("size: 31 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 1)))).isEqualTo("FFFFFF7F");
        assertWithMessage("size: 32 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 1)))).isEqualTo("FFFFFFFF");
        assertWithMessage("size: 33 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 1)))).isEqualTo("FFFFFFFF01");
        assertWithMessage("size: 34 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 1)))).isEqualTo("FFFFFFFF03");
        assertWithMessage("size: 35 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 1)))).isEqualTo("FFFFFFFF07");
        assertWithMessage("size: 36 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 1)))).isEqualTo("FFFFFFFF0F");
        assertWithMessage("size: 37 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 1)))).isEqualTo("FFFFFFFF1F");
        assertWithMessage("size: 38 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 1)))).isEqualTo("FFFFFFFF3F");
        assertWithMessage("size: 39 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 1)))).isEqualTo("FFFFFFFF7F");
        assertWithMessage("size: 40 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 1)))).isEqualTo("FFFFFFFFFF");
        assertWithMessage("size: 41 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 1)))).isEqualTo("FFFFFFFFFF01");
        assertWithMessage("size: 42 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 1)))).isEqualTo("FFFFFFFFFF03");
        assertWithMessage("size: 43 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 1)))).isEqualTo("FFFFFFFFFF07");
        assertWithMessage("size: 44 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 1)))).isEqualTo("FFFFFFFFFF0F");
        assertWithMessage("size: 45 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 1)))).isEqualTo("FFFFFFFFFF1F");
        assertWithMessage("size: 46 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 1)))).isEqualTo("FFFFFFFFFF3F");
        assertWithMessage("size: 47 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 1)))).isEqualTo("FFFFFFFFFF7F");
        assertWithMessage("size: 48 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 1)))).isEqualTo("FFFFFFFFFFFF");
        assertWithMessage("size: 49 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 1)))).isEqualTo("FFFFFFFFFFFF01");
        assertWithMessage("size: 50 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 1)))).isEqualTo("FFFFFFFFFFFF03");
        assertWithMessage("size: 51 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 1)))).isEqualTo("FFFFFFFFFFFF07");
        assertWithMessage("size: 52 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 1)))).isEqualTo("FFFFFFFFFFFF0F");
        assertWithMessage("size: 53 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 1)))).isEqualTo("FFFFFFFFFFFF1F");
        assertWithMessage("size: 54 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 1)))).isEqualTo("FFFFFFFFFFFF3F");
        assertWithMessage("size: 55 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 1)))).isEqualTo("FFFFFFFFFFFF7F");
        assertWithMessage("size: 56 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 1)))).isEqualTo("FFFFFFFFFFFFFF");
        assertWithMessage("size: 57 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 1)))).isEqualTo("FFFFFFFFFFFFFF01");
        assertWithMessage("size: 58 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 1)))).isEqualTo("FFFFFFFFFFFFFF03");
        assertWithMessage("size: 59 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 1)))).isEqualTo("FFFFFFFFFFFFFF07");
        assertWithMessage("size: 60 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 1)))).isEqualTo("FFFFFFFFFFFFFF0F");
        assertWithMessage("size: 61 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 1)))).isEqualTo("FFFFFFFFFFFFFF1F");
        assertWithMessage("size: 62 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 1)))).isEqualTo("FFFFFFFFFFFFFF3F");
        assertWithMessage("size: 63 step: 1").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 1)))).isEqualTo("FFFFFFFFFFFFFF7F");
        assertWithMessage("size: 0 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 2)))).isEqualTo("");
        assertWithMessage("size: 1 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 2)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 2)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 2)))).isEqualTo("05");
        assertWithMessage("size: 4 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 2)))).isEqualTo("05");
        assertWithMessage("size: 5 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 2)))).isEqualTo("15");
        assertWithMessage("size: 6 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 2)))).isEqualTo("15");
        assertWithMessage("size: 7 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 2)))).isEqualTo("55");
        assertWithMessage("size: 8 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 2)))).isEqualTo("55");
        assertWithMessage("size: 9 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 2)))).isEqualTo("5501");
        assertWithMessage("size: 10 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 2)))).isEqualTo("5501");
        assertWithMessage("size: 11 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 2)))).isEqualTo("5505");
        assertWithMessage("size: 12 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 2)))).isEqualTo("5505");
        assertWithMessage("size: 13 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 2)))).isEqualTo("5515");
        assertWithMessage("size: 14 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 2)))).isEqualTo("5515");
        assertWithMessage("size: 15 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 2)))).isEqualTo("5555");
        assertWithMessage("size: 16 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 2)))).isEqualTo("5555");
        assertWithMessage("size: 17 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 2)))).isEqualTo("555501");
        assertWithMessage("size: 18 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 2)))).isEqualTo("555501");
        assertWithMessage("size: 19 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 2)))).isEqualTo("555505");
        assertWithMessage("size: 20 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 2)))).isEqualTo("555505");
        assertWithMessage("size: 21 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 2)))).isEqualTo("555515");
        assertWithMessage("size: 22 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 2)))).isEqualTo("555515");
        assertWithMessage("size: 23 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 2)))).isEqualTo("555555");
        assertWithMessage("size: 24 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 2)))).isEqualTo("555555");
        assertWithMessage("size: 25 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 2)))).isEqualTo("55555501");
        assertWithMessage("size: 26 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 2)))).isEqualTo("55555501");
        assertWithMessage("size: 27 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 2)))).isEqualTo("55555505");
        assertWithMessage("size: 28 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 2)))).isEqualTo("55555505");
        assertWithMessage("size: 29 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 2)))).isEqualTo("55555515");
        assertWithMessage("size: 30 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 2)))).isEqualTo("55555515");
        assertWithMessage("size: 31 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 2)))).isEqualTo("55555555");
        assertWithMessage("size: 32 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 2)))).isEqualTo("55555555");
        assertWithMessage("size: 33 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 2)))).isEqualTo("5555555501");
        assertWithMessage("size: 34 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 2)))).isEqualTo("5555555501");
        assertWithMessage("size: 35 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 2)))).isEqualTo("5555555505");
        assertWithMessage("size: 36 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 2)))).isEqualTo("5555555505");
        assertWithMessage("size: 37 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 2)))).isEqualTo("5555555515");
        assertWithMessage("size: 38 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 2)))).isEqualTo("5555555515");
        assertWithMessage("size: 39 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 2)))).isEqualTo("5555555555");
        assertWithMessage("size: 40 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 2)))).isEqualTo("5555555555");
        assertWithMessage("size: 41 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 2)))).isEqualTo("555555555501");
        assertWithMessage("size: 42 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 2)))).isEqualTo("555555555501");
        assertWithMessage("size: 43 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 2)))).isEqualTo("555555555505");
        assertWithMessage("size: 44 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 2)))).isEqualTo("555555555505");
        assertWithMessage("size: 45 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 2)))).isEqualTo("555555555515");
        assertWithMessage("size: 46 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 2)))).isEqualTo("555555555515");
        assertWithMessage("size: 47 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 2)))).isEqualTo("555555555555");
        assertWithMessage("size: 48 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 2)))).isEqualTo("555555555555");
        assertWithMessage("size: 49 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 2)))).isEqualTo("55555555555501");
        assertWithMessage("size: 50 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 2)))).isEqualTo("55555555555501");
        assertWithMessage("size: 51 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 2)))).isEqualTo("55555555555505");
        assertWithMessage("size: 52 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 2)))).isEqualTo("55555555555505");
        assertWithMessage("size: 53 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 2)))).isEqualTo("55555555555515");
        assertWithMessage("size: 54 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 2)))).isEqualTo("55555555555515");
        assertWithMessage("size: 55 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 2)))).isEqualTo("55555555555555");
        assertWithMessage("size: 56 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 2)))).isEqualTo("55555555555555");
        assertWithMessage("size: 57 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 2)))).isEqualTo("5555555555555501");
        assertWithMessage("size: 58 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 2)))).isEqualTo("5555555555555501");
        assertWithMessage("size: 59 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 2)))).isEqualTo("5555555555555505");
        assertWithMessage("size: 60 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 2)))).isEqualTo("5555555555555505");
        assertWithMessage("size: 61 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 2)))).isEqualTo("5555555555555515");
        assertWithMessage("size: 62 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 2)))).isEqualTo("5555555555555515");
        assertWithMessage("size: 63 step: 2").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 2)))).isEqualTo("5555555555555555");
        assertWithMessage("size: 0 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 3)))).isEqualTo("");
        assertWithMessage("size: 1 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 3)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 3)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 3)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 3)))).isEqualTo("09");
        assertWithMessage("size: 5 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 3)))).isEqualTo("09");
        assertWithMessage("size: 6 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 3)))).isEqualTo("09");
        assertWithMessage("size: 7 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 3)))).isEqualTo("49");
        assertWithMessage("size: 8 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 3)))).isEqualTo("49");
        assertWithMessage("size: 9 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 3)))).isEqualTo("4900");
        assertWithMessage("size: 10 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 3)))).isEqualTo("4902");
        assertWithMessage("size: 11 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 3)))).isEqualTo("4902");
        assertWithMessage("size: 12 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 3)))).isEqualTo("4902");
        assertWithMessage("size: 13 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 3)))).isEqualTo("4912");
        assertWithMessage("size: 14 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 3)))).isEqualTo("4912");
        assertWithMessage("size: 15 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 3)))).isEqualTo("4912");
        assertWithMessage("size: 16 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 3)))).isEqualTo("4992");
        assertWithMessage("size: 17 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 3)))).isEqualTo("499200");
        assertWithMessage("size: 18 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 3)))).isEqualTo("499200");
        assertWithMessage("size: 19 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 3)))).isEqualTo("499204");
        assertWithMessage("size: 20 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 3)))).isEqualTo("499204");
        assertWithMessage("size: 21 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 3)))).isEqualTo("499204");
        assertWithMessage("size: 22 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 3)))).isEqualTo("499224");
        assertWithMessage("size: 23 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 3)))).isEqualTo("499224");
        assertWithMessage("size: 24 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 3)))).isEqualTo("499224");
        assertWithMessage("size: 25 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 3)))).isEqualTo("49922401");
        assertWithMessage("size: 26 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 3)))).isEqualTo("49922401");
        assertWithMessage("size: 27 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 3)))).isEqualTo("49922401");
        assertWithMessage("size: 28 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 3)))).isEqualTo("49922409");
        assertWithMessage("size: 29 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 3)))).isEqualTo("49922409");
        assertWithMessage("size: 30 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 3)))).isEqualTo("49922409");
        assertWithMessage("size: 31 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 3)))).isEqualTo("49922449");
        assertWithMessage("size: 32 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 3)))).isEqualTo("49922449");
        assertWithMessage("size: 33 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 3)))).isEqualTo("4992244900");
        assertWithMessage("size: 34 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 3)))).isEqualTo("4992244902");
        assertWithMessage("size: 35 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 3)))).isEqualTo("4992244902");
        assertWithMessage("size: 36 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 3)))).isEqualTo("4992244902");
        assertWithMessage("size: 37 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 3)))).isEqualTo("4992244912");
        assertWithMessage("size: 38 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 3)))).isEqualTo("4992244912");
        assertWithMessage("size: 39 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 3)))).isEqualTo("4992244912");
        assertWithMessage("size: 40 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 3)))).isEqualTo("4992244992");
        assertWithMessage("size: 41 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 3)))).isEqualTo("499224499200");
        assertWithMessage("size: 42 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 3)))).isEqualTo("499224499200");
        assertWithMessage("size: 43 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 3)))).isEqualTo("499224499204");
        assertWithMessage("size: 44 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 3)))).isEqualTo("499224499204");
        assertWithMessage("size: 45 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 3)))).isEqualTo("499224499204");
        assertWithMessage("size: 46 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 3)))).isEqualTo("499224499224");
        assertWithMessage("size: 47 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 3)))).isEqualTo("499224499224");
        assertWithMessage("size: 48 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 3)))).isEqualTo("499224499224");
        assertWithMessage("size: 49 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 3)))).isEqualTo("49922449922401");
        assertWithMessage("size: 50 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 3)))).isEqualTo("49922449922401");
        assertWithMessage("size: 51 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 3)))).isEqualTo("49922449922401");
        assertWithMessage("size: 52 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 3)))).isEqualTo("49922449922409");
        assertWithMessage("size: 53 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 3)))).isEqualTo("49922449922409");
        assertWithMessage("size: 54 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 3)))).isEqualTo("49922449922409");
        assertWithMessage("size: 55 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 3)))).isEqualTo("49922449922449");
        assertWithMessage("size: 56 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 3)))).isEqualTo("49922449922449");
        assertWithMessage("size: 57 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 3)))).isEqualTo("4992244992244900");
        assertWithMessage("size: 58 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 3)))).isEqualTo("4992244992244902");
        assertWithMessage("size: 59 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 3)))).isEqualTo("4992244992244902");
        assertWithMessage("size: 60 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 3)))).isEqualTo("4992244992244902");
        assertWithMessage("size: 61 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 3)))).isEqualTo("4992244992244912");
        assertWithMessage("size: 62 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 3)))).isEqualTo("4992244992244912");
        assertWithMessage("size: 63 step: 3").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 3)))).isEqualTo("4992244992244912");
        assertWithMessage("size: 0 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 4)))).isEqualTo("");
        assertWithMessage("size: 1 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 4)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 4)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 4)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 4)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 4)))).isEqualTo("11");
        assertWithMessage("size: 6 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 4)))).isEqualTo("11");
        assertWithMessage("size: 7 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 4)))).isEqualTo("11");
        assertWithMessage("size: 8 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 4)))).isEqualTo("11");
        assertWithMessage("size: 9 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 4)))).isEqualTo("1101");
        assertWithMessage("size: 10 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 4)))).isEqualTo("1101");
        assertWithMessage("size: 11 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 4)))).isEqualTo("1101");
        assertWithMessage("size: 12 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 4)))).isEqualTo("1101");
        assertWithMessage("size: 13 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 4)))).isEqualTo("1111");
        assertWithMessage("size: 14 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 4)))).isEqualTo("1111");
        assertWithMessage("size: 15 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 4)))).isEqualTo("1111");
        assertWithMessage("size: 16 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 4)))).isEqualTo("1111");
        assertWithMessage("size: 17 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 4)))).isEqualTo("111101");
        assertWithMessage("size: 18 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 4)))).isEqualTo("111101");
        assertWithMessage("size: 19 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 4)))).isEqualTo("111101");
        assertWithMessage("size: 20 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 4)))).isEqualTo("111101");
        assertWithMessage("size: 21 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 4)))).isEqualTo("111111");
        assertWithMessage("size: 22 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 4)))).isEqualTo("111111");
        assertWithMessage("size: 23 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 4)))).isEqualTo("111111");
        assertWithMessage("size: 24 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 4)))).isEqualTo("111111");
        assertWithMessage("size: 25 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 4)))).isEqualTo("11111101");
        assertWithMessage("size: 26 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 4)))).isEqualTo("11111101");
        assertWithMessage("size: 27 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 4)))).isEqualTo("11111101");
        assertWithMessage("size: 28 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 4)))).isEqualTo("11111101");
        assertWithMessage("size: 29 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 4)))).isEqualTo("11111111");
        assertWithMessage("size: 30 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 4)))).isEqualTo("11111111");
        assertWithMessage("size: 31 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 4)))).isEqualTo("11111111");
        assertWithMessage("size: 32 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 4)))).isEqualTo("11111111");
        assertWithMessage("size: 33 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 4)))).isEqualTo("1111111101");
        assertWithMessage("size: 34 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 4)))).isEqualTo("1111111101");
        assertWithMessage("size: 35 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 4)))).isEqualTo("1111111101");
        assertWithMessage("size: 36 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 4)))).isEqualTo("1111111101");
        assertWithMessage("size: 37 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 4)))).isEqualTo("1111111111");
        assertWithMessage("size: 38 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 4)))).isEqualTo("1111111111");
        assertWithMessage("size: 39 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 4)))).isEqualTo("1111111111");
        assertWithMessage("size: 40 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 4)))).isEqualTo("1111111111");
        assertWithMessage("size: 41 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 4)))).isEqualTo("111111111101");
        assertWithMessage("size: 42 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 4)))).isEqualTo("111111111101");
        assertWithMessage("size: 43 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 4)))).isEqualTo("111111111101");
        assertWithMessage("size: 44 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 4)))).isEqualTo("111111111101");
        assertWithMessage("size: 45 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 4)))).isEqualTo("111111111111");
        assertWithMessage("size: 46 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 4)))).isEqualTo("111111111111");
        assertWithMessage("size: 47 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 4)))).isEqualTo("111111111111");
        assertWithMessage("size: 48 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 4)))).isEqualTo("111111111111");
        assertWithMessage("size: 49 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 4)))).isEqualTo("11111111111101");
        assertWithMessage("size: 50 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 4)))).isEqualTo("11111111111101");
        assertWithMessage("size: 51 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 4)))).isEqualTo("11111111111101");
        assertWithMessage("size: 52 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 4)))).isEqualTo("11111111111101");
        assertWithMessage("size: 53 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 4)))).isEqualTo("11111111111111");
        assertWithMessage("size: 54 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 4)))).isEqualTo("11111111111111");
        assertWithMessage("size: 55 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 4)))).isEqualTo("11111111111111");
        assertWithMessage("size: 56 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 4)))).isEqualTo("11111111111111");
        assertWithMessage("size: 57 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 4)))).isEqualTo("1111111111111101");
        assertWithMessage("size: 58 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 4)))).isEqualTo("1111111111111101");
        assertWithMessage("size: 59 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 4)))).isEqualTo("1111111111111101");
        assertWithMessage("size: 60 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 4)))).isEqualTo("1111111111111101");
        assertWithMessage("size: 61 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 4)))).isEqualTo("1111111111111111");
        assertWithMessage("size: 62 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 4)))).isEqualTo("1111111111111111");
        assertWithMessage("size: 63 step: 4").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 4)))).isEqualTo("1111111111111111");
        assertWithMessage("size: 0 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 5)))).isEqualTo("");
        assertWithMessage("size: 1 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 5)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 5)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 5)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 5)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 5)))).isEqualTo("01");
        assertWithMessage("size: 6 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 5)))).isEqualTo("21");
        assertWithMessage("size: 7 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 5)))).isEqualTo("21");
        assertWithMessage("size: 8 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 5)))).isEqualTo("21");
        assertWithMessage("size: 9 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 5)))).isEqualTo("2100");
        assertWithMessage("size: 10 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 5)))).isEqualTo("2100");
        assertWithMessage("size: 11 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 5)))).isEqualTo("2104");
        assertWithMessage("size: 12 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 5)))).isEqualTo("2104");
        assertWithMessage("size: 13 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 5)))).isEqualTo("2104");
        assertWithMessage("size: 14 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 5)))).isEqualTo("2104");
        assertWithMessage("size: 15 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 5)))).isEqualTo("2104");
        assertWithMessage("size: 16 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 5)))).isEqualTo("2184");
        assertWithMessage("size: 17 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 5)))).isEqualTo("218400");
        assertWithMessage("size: 18 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 5)))).isEqualTo("218400");
        assertWithMessage("size: 19 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 5)))).isEqualTo("218400");
        assertWithMessage("size: 20 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 5)))).isEqualTo("218400");
        assertWithMessage("size: 21 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 5)))).isEqualTo("218410");
        assertWithMessage("size: 22 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 5)))).isEqualTo("218410");
        assertWithMessage("size: 23 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 5)))).isEqualTo("218410");
        assertWithMessage("size: 24 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 5)))).isEqualTo("218410");
        assertWithMessage("size: 25 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 5)))).isEqualTo("21841000");
        assertWithMessage("size: 26 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 5)))).isEqualTo("21841002");
        assertWithMessage("size: 27 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 5)))).isEqualTo("21841002");
        assertWithMessage("size: 28 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 5)))).isEqualTo("21841002");
        assertWithMessage("size: 29 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 5)))).isEqualTo("21841002");
        assertWithMessage("size: 30 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 5)))).isEqualTo("21841002");
        assertWithMessage("size: 31 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 5)))).isEqualTo("21841042");
        assertWithMessage("size: 32 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 5)))).isEqualTo("21841042");
        assertWithMessage("size: 33 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 5)))).isEqualTo("2184104200");
        assertWithMessage("size: 34 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 5)))).isEqualTo("2184104200");
        assertWithMessage("size: 35 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 5)))).isEqualTo("2184104200");
        assertWithMessage("size: 36 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 5)))).isEqualTo("2184104208");
        assertWithMessage("size: 37 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 5)))).isEqualTo("2184104208");
        assertWithMessage("size: 38 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 5)))).isEqualTo("2184104208");
        assertWithMessage("size: 39 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 5)))).isEqualTo("2184104208");
        assertWithMessage("size: 40 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 5)))).isEqualTo("2184104208");
        assertWithMessage("size: 41 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 5)))).isEqualTo("218410420801");
        assertWithMessage("size: 42 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 5)))).isEqualTo("218410420801");
        assertWithMessage("size: 43 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 5)))).isEqualTo("218410420801");
        assertWithMessage("size: 44 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 5)))).isEqualTo("218410420801");
        assertWithMessage("size: 45 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 5)))).isEqualTo("218410420801");
        assertWithMessage("size: 46 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 5)))).isEqualTo("218410420821");
        assertWithMessage("size: 47 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 5)))).isEqualTo("218410420821");
        assertWithMessage("size: 48 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 5)))).isEqualTo("218410420821");
        assertWithMessage("size: 49 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 5)))).isEqualTo("21841042082100");
        assertWithMessage("size: 50 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 5)))).isEqualTo("21841042082100");
        assertWithMessage("size: 51 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 5)))).isEqualTo("21841042082104");
        assertWithMessage("size: 52 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 5)))).isEqualTo("21841042082104");
        assertWithMessage("size: 53 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 5)))).isEqualTo("21841042082104");
        assertWithMessage("size: 54 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 5)))).isEqualTo("21841042082104");
        assertWithMessage("size: 55 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 5)))).isEqualTo("21841042082104");
        assertWithMessage("size: 56 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 5)))).isEqualTo("21841042082184");
        assertWithMessage("size: 57 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 5)))).isEqualTo("2184104208218400");
        assertWithMessage("size: 58 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 5)))).isEqualTo("2184104208218400");
        assertWithMessage("size: 59 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 5)))).isEqualTo("2184104208218400");
        assertWithMessage("size: 60 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 5)))).isEqualTo("2184104208218400");
        assertWithMessage("size: 61 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 5)))).isEqualTo("2184104208218410");
        assertWithMessage("size: 62 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 5)))).isEqualTo("2184104208218410");
        assertWithMessage("size: 63 step: 5").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 5)))).isEqualTo("2184104208218410");
        assertWithMessage("size: 0 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 6)))).isEqualTo("");
        assertWithMessage("size: 1 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 6)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 6)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 6)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 6)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 6)))).isEqualTo("01");
        assertWithMessage("size: 6 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 6)))).isEqualTo("01");
        assertWithMessage("size: 7 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 6)))).isEqualTo("41");
        assertWithMessage("size: 8 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 6)))).isEqualTo("41");
        assertWithMessage("size: 9 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 6)))).isEqualTo("4100");
        assertWithMessage("size: 10 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 6)))).isEqualTo("4100");
        assertWithMessage("size: 11 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 6)))).isEqualTo("4100");
        assertWithMessage("size: 12 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 6)))).isEqualTo("4100");
        assertWithMessage("size: 13 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 6)))).isEqualTo("4110");
        assertWithMessage("size: 14 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 6)))).isEqualTo("4110");
        assertWithMessage("size: 15 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 6)))).isEqualTo("4110");
        assertWithMessage("size: 16 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 6)))).isEqualTo("4110");
        assertWithMessage("size: 17 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 6)))).isEqualTo("411000");
        assertWithMessage("size: 18 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 6)))).isEqualTo("411000");
        assertWithMessage("size: 19 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 6)))).isEqualTo("411004");
        assertWithMessage("size: 20 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 6)))).isEqualTo("411004");
        assertWithMessage("size: 21 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 6)))).isEqualTo("411004");
        assertWithMessage("size: 22 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 6)))).isEqualTo("411004");
        assertWithMessage("size: 23 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 6)))).isEqualTo("411004");
        assertWithMessage("size: 24 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 6)))).isEqualTo("411004");
        assertWithMessage("size: 25 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 26 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 27 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 28 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 29 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 30 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 6)))).isEqualTo("41100401");
        assertWithMessage("size: 31 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 6)))).isEqualTo("41100441");
        assertWithMessage("size: 32 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 6)))).isEqualTo("41100441");
        assertWithMessage("size: 33 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 6)))).isEqualTo("4110044100");
        assertWithMessage("size: 34 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 6)))).isEqualTo("4110044100");
        assertWithMessage("size: 35 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 6)))).isEqualTo("4110044100");
        assertWithMessage("size: 36 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 6)))).isEqualTo("4110044100");
        assertWithMessage("size: 37 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 6)))).isEqualTo("4110044110");
        assertWithMessage("size: 38 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 6)))).isEqualTo("4110044110");
        assertWithMessage("size: 39 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 6)))).isEqualTo("4110044110");
        assertWithMessage("size: 40 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 6)))).isEqualTo("4110044110");
        assertWithMessage("size: 41 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 6)))).isEqualTo("411004411000");
        assertWithMessage("size: 42 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 6)))).isEqualTo("411004411000");
        assertWithMessage("size: 43 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 44 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 45 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 46 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 47 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 48 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 6)))).isEqualTo("411004411004");
        assertWithMessage("size: 49 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 50 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 51 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 52 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 53 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 54 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 6)))).isEqualTo("41100441100401");
        assertWithMessage("size: 55 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 6)))).isEqualTo("41100441100441");
        assertWithMessage("size: 56 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 6)))).isEqualTo("41100441100441");
        assertWithMessage("size: 57 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 6)))).isEqualTo("4110044110044100");
        assertWithMessage("size: 58 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 6)))).isEqualTo("4110044110044100");
        assertWithMessage("size: 59 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 6)))).isEqualTo("4110044110044100");
        assertWithMessage("size: 60 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 6)))).isEqualTo("4110044110044100");
        assertWithMessage("size: 61 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 6)))).isEqualTo("4110044110044110");
        assertWithMessage("size: 62 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 6)))).isEqualTo("4110044110044110");
        assertWithMessage("size: 63 step: 6").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 6)))).isEqualTo("4110044110044110");
        assertWithMessage("size: 0 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 7)))).isEqualTo("");
        assertWithMessage("size: 1 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 7)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 7)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 7)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 7)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 7)))).isEqualTo("01");
        assertWithMessage("size: 6 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 7)))).isEqualTo("01");
        assertWithMessage("size: 7 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 7)))).isEqualTo("01");
        assertWithMessage("size: 8 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 7)))).isEqualTo("81");
        assertWithMessage("size: 9 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 7)))).isEqualTo("8100");
        assertWithMessage("size: 10 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 7)))).isEqualTo("8100");
        assertWithMessage("size: 11 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 7)))).isEqualTo("8100");
        assertWithMessage("size: 12 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 7)))).isEqualTo("8100");
        assertWithMessage("size: 13 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 7)))).isEqualTo("8100");
        assertWithMessage("size: 14 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 7)))).isEqualTo("8100");
        assertWithMessage("size: 15 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 7)))).isEqualTo("8140");
        assertWithMessage("size: 16 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 7)))).isEqualTo("8140");
        assertWithMessage("size: 17 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 7)))).isEqualTo("814000");
        assertWithMessage("size: 18 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 7)))).isEqualTo("814000");
        assertWithMessage("size: 19 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 7)))).isEqualTo("814000");
        assertWithMessage("size: 20 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 7)))).isEqualTo("814000");
        assertWithMessage("size: 21 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 7)))).isEqualTo("814000");
        assertWithMessage("size: 22 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 7)))).isEqualTo("814020");
        assertWithMessage("size: 23 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 7)))).isEqualTo("814020");
        assertWithMessage("size: 24 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 7)))).isEqualTo("814020");
        assertWithMessage("size: 25 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 7)))).isEqualTo("81402000");
        assertWithMessage("size: 26 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 7)))).isEqualTo("81402000");
        assertWithMessage("size: 27 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 7)))).isEqualTo("81402000");
        assertWithMessage("size: 28 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 7)))).isEqualTo("81402000");
        assertWithMessage("size: 29 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 7)))).isEqualTo("81402010");
        assertWithMessage("size: 30 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 7)))).isEqualTo("81402010");
        assertWithMessage("size: 31 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 7)))).isEqualTo("81402010");
        assertWithMessage("size: 32 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 7)))).isEqualTo("81402010");
        assertWithMessage("size: 33 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 7)))).isEqualTo("8140201000");
        assertWithMessage("size: 34 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 7)))).isEqualTo("8140201000");
        assertWithMessage("size: 35 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 7)))).isEqualTo("8140201000");
        assertWithMessage("size: 36 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 7)))).isEqualTo("8140201008");
        assertWithMessage("size: 37 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 7)))).isEqualTo("8140201008");
        assertWithMessage("size: 38 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 7)))).isEqualTo("8140201008");
        assertWithMessage("size: 39 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 7)))).isEqualTo("8140201008");
        assertWithMessage("size: 40 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 7)))).isEqualTo("8140201008");
        assertWithMessage("size: 41 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 7)))).isEqualTo("814020100800");
        assertWithMessage("size: 42 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 7)))).isEqualTo("814020100800");
        assertWithMessage("size: 43 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 44 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 45 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 46 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 47 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 48 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 7)))).isEqualTo("814020100804");
        assertWithMessage("size: 49 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 7)))).isEqualTo("81402010080400");
        assertWithMessage("size: 50 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 51 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 52 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 53 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 54 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 55 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 56 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 7)))).isEqualTo("81402010080402");
        assertWithMessage("size: 57 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 58 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 59 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 60 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 61 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 62 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 63 step: 7").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 7)))).isEqualTo("8140201008040201");
        assertWithMessage("size: 0 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 8)))).isEqualTo("");
        assertWithMessage("size: 1 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 8)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 8)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 8)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 8)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 8)))).isEqualTo("01");
        assertWithMessage("size: 6 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 8)))).isEqualTo("01");
        assertWithMessage("size: 7 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 8)))).isEqualTo("01");
        assertWithMessage("size: 8 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 8)))).isEqualTo("01");
        assertWithMessage("size: 9 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 8)))).isEqualTo("0101");
        assertWithMessage("size: 10 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 8)))).isEqualTo("0101");
        assertWithMessage("size: 11 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 8)))).isEqualTo("0101");
        assertWithMessage("size: 12 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 8)))).isEqualTo("0101");
        assertWithMessage("size: 13 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 8)))).isEqualTo("0101");
        assertWithMessage("size: 14 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 8)))).isEqualTo("0101");
        assertWithMessage("size: 15 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 8)))).isEqualTo("0101");
        assertWithMessage("size: 16 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 8)))).isEqualTo("0101");
        assertWithMessage("size: 17 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 8)))).isEqualTo("010101");
        assertWithMessage("size: 18 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 8)))).isEqualTo("010101");
        assertWithMessage("size: 19 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 8)))).isEqualTo("010101");
        assertWithMessage("size: 20 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 8)))).isEqualTo("010101");
        assertWithMessage("size: 21 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 8)))).isEqualTo("010101");
        assertWithMessage("size: 22 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 8)))).isEqualTo("010101");
        assertWithMessage("size: 23 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 8)))).isEqualTo("010101");
        assertWithMessage("size: 24 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 8)))).isEqualTo("010101");
        assertWithMessage("size: 25 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 26 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 27 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 28 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 29 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 30 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 31 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 32 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 8)))).isEqualTo("01010101");
        assertWithMessage("size: 33 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 34 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 35 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 36 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 37 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 38 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 39 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 40 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 8)))).isEqualTo("0101010101");
        assertWithMessage("size: 41 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 42 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 43 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 44 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 45 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 46 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 47 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 48 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 8)))).isEqualTo("010101010101");
        assertWithMessage("size: 49 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 50 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 51 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 52 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 53 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 54 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 55 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 56 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 8)))).isEqualTo("01010101010101");
        assertWithMessage("size: 57 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 58 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 59 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 60 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 61 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 62 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 63 step: 8").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 8)))).isEqualTo("0101010101010101");
        assertWithMessage("size: 0 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(0, 9)))).isEqualTo("");
        assertWithMessage("size: 1 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(1, 9)))).isEqualTo("01");
        assertWithMessage("size: 2 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(2, 9)))).isEqualTo("01");
        assertWithMessage("size: 3 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(3, 9)))).isEqualTo("01");
        assertWithMessage("size: 4 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(4, 9)))).isEqualTo("01");
        assertWithMessage("size: 5 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(5, 9)))).isEqualTo("01");
        assertWithMessage("size: 6 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(6, 9)))).isEqualTo("01");
        assertWithMessage("size: 7 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(7, 9)))).isEqualTo("01");
        assertWithMessage("size: 8 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(8, 9)))).isEqualTo("01");
        assertWithMessage("size: 9 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(9, 9)))).isEqualTo("0100");
        assertWithMessage("size: 10 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(10, 9)))).isEqualTo("0102");
        assertWithMessage("size: 11 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(11, 9)))).isEqualTo("0102");
        assertWithMessage("size: 12 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(12, 9)))).isEqualTo("0102");
        assertWithMessage("size: 13 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(13, 9)))).isEqualTo("0102");
        assertWithMessage("size: 14 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(14, 9)))).isEqualTo("0102");
        assertWithMessage("size: 15 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(15, 9)))).isEqualTo("0102");
        assertWithMessage("size: 16 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(16, 9)))).isEqualTo("0102");
        assertWithMessage("size: 17 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(17, 9)))).isEqualTo("010200");
        assertWithMessage("size: 18 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(18, 9)))).isEqualTo("010200");
        assertWithMessage("size: 19 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(19, 9)))).isEqualTo("010204");
        assertWithMessage("size: 20 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(20, 9)))).isEqualTo("010204");
        assertWithMessage("size: 21 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(21, 9)))).isEqualTo("010204");
        assertWithMessage("size: 22 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(22, 9)))).isEqualTo("010204");
        assertWithMessage("size: 23 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(23, 9)))).isEqualTo("010204");
        assertWithMessage("size: 24 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(24, 9)))).isEqualTo("010204");
        assertWithMessage("size: 25 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(25, 9)))).isEqualTo("01020400");
        assertWithMessage("size: 26 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(26, 9)))).isEqualTo("01020400");
        assertWithMessage("size: 27 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(27, 9)))).isEqualTo("01020400");
        assertWithMessage("size: 28 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(28, 9)))).isEqualTo("01020408");
        assertWithMessage("size: 29 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(29, 9)))).isEqualTo("01020408");
        assertWithMessage("size: 30 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(30, 9)))).isEqualTo("01020408");
        assertWithMessage("size: 31 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(31, 9)))).isEqualTo("01020408");
        assertWithMessage("size: 32 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(32, 9)))).isEqualTo("01020408");
        assertWithMessage("size: 33 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(33, 9)))).isEqualTo("0102040800");
        assertWithMessage("size: 34 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(34, 9)))).isEqualTo("0102040800");
        assertWithMessage("size: 35 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(35, 9)))).isEqualTo("0102040800");
        assertWithMessage("size: 36 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(36, 9)))).isEqualTo("0102040800");
        assertWithMessage("size: 37 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(37, 9)))).isEqualTo("0102040810");
        assertWithMessage("size: 38 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(38, 9)))).isEqualTo("0102040810");
        assertWithMessage("size: 39 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(39, 9)))).isEqualTo("0102040810");
        assertWithMessage("size: 40 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(40, 9)))).isEqualTo("0102040810");
        assertWithMessage("size: 41 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(41, 9)))).isEqualTo("010204081000");
        assertWithMessage("size: 42 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(42, 9)))).isEqualTo("010204081000");
        assertWithMessage("size: 43 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(43, 9)))).isEqualTo("010204081000");
        assertWithMessage("size: 44 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(44, 9)))).isEqualTo("010204081000");
        assertWithMessage("size: 45 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(45, 9)))).isEqualTo("010204081000");
        assertWithMessage("size: 46 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(46, 9)))).isEqualTo("010204081020");
        assertWithMessage("size: 47 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(47, 9)))).isEqualTo("010204081020");
        assertWithMessage("size: 48 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(48, 9)))).isEqualTo("010204081020");
        assertWithMessage("size: 49 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(49, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 50 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(50, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 51 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(51, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 52 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(52, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 53 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(53, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 54 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(54, 9)))).isEqualTo("01020408102000");
        assertWithMessage("size: 55 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(55, 9)))).isEqualTo("01020408102040");
        assertWithMessage("size: 56 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(56, 9)))).isEqualTo("01020408102040");
        assertWithMessage("size: 57 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(57, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 58 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(58, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 59 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(59, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 60 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(60, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 61 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(61, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 62 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(62, 9)))).isEqualTo("0102040810204000");
        assertWithMessage("size: 63 step: 9").that(bytesToHex(BitmapTools.packRGB565bytesToMono(get565stream(63, 9)))).isEqualTo("0102040810204000");

    }

    @Test
    public void unpackMonoBytesToRGB565Test() {
        for (int step = 1; step < 11; step++) {
            for (int i = 0; i < 128; i++) {
                byte[] original = get565stream(i, step);
                byte[] result = BitmapTools.packRGB565bytesToMono(original);
                byte[] unpacked = BitmapTools.unpackMonoBytesToRGB565(result);
                byte[] unpackedNormalized = new byte[2 * i];
                System.arraycopy(unpacked, 0, unpackedNormalized, 0, i * 2);
                assertWithMessage("length of size A: " + i + " step: " + step).that(unpacked.length - original.length).isLessThan(15);
                assertWithMessage("length of size B: " + i + " step: " + step).that(unpacked.length - original.length).isGreaterThan(-1);
                assertWithMessage("size: " + i + " step: " + step).that(unpackedNormalized).isEqualTo(original);
            }
        }
    }
}